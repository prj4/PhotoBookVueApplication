{"remainingRequest":"C:\\PhotoBookVueApplication\\Photobookvueapplication\\Photobookvueapplication\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\PhotoBookVueApplication\\Photobookvueapplication\\Photobookvueapplication\\src\\components\\GuestEventPage.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\PhotoBookVueApplication\\Photobookvueapplication\\Photobookvueapplication\\src\\components\\GuestEventPage.vue","mtime":1558991584260},{"path":"C:\\PhotoBookVueApplication\\Photobookvueapplication\\Photobookvueapplication\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\PhotoBookVueApplication\\Photobookvueapplication\\Photobookvueapplication\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\PhotoBookVueApplication\\Photobookvueapplication\\Photobookvueapplication\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\PhotoBookVueApplication\\Photobookvueapplication\\Photobookvueapplication\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\nimport JSZip from 'jszip'\nimport { saveAs } from 'file-saver';\n\n\nexport default {\n\n    methods: {\n        downloadPhotos: function () {\n\n            var zip = new JSZip();\n            var count = 0;\n            var zipFilename = \"Photos.zip\";\n            var vuecomponent = this;\n            let FullSizePhotoArray = [/*...*/]\n           \n\n            for (let e = 0; e < vuecomponent.EventPhotoIDs.length; e++) {\n\n                let specificpictureurl = 'https://photobookwebapi1.azurewebsites.net/api/Picture/' + vuecomponent.EventPin + '/' + vuecomponent.EventPhotoIDs[e];\n\n                fetch(specificpictureurl, {\n                    credentials: 'include',\n                    mode: 'cors'\n                })\n                    .then(function (response) {\n                        if (response.status == '200') {\n                            response.blob()\n                                .then(image => {\n                                    // Then create a local URL for that image and print it \n                                    FullSizePhotoArray[e] = URL.createObjectURL(image);\n\n                                    var filename = FullSizePhotoArray[e];\n                                    \n                                    filename = filename.replace(/[\\/\\*\\|\\:\\<\\>\\?\\\"\\\\]/gi, '').replace(\"blobhttplocalhost1337\", \"\").replace(\"blobhttpsphotobookvue.z16.web.core.windows.net\", \"\");;\n                                    // loading a file and add it in a zip file\n                                    JSZipUtils.getBinaryContent(FullSizePhotoArray[e], function (err, data) {\n                                        if (err) {\n                                            throw err; // or handle the error\n                                        }\n                                        zip.file(filename + '.jpg', data, { binary: true });\n                                        count++;\n                                        vuecomponent.bar.animate((count / vuecomponent.EventPhotos.length) * 0.95);\n                                        if (count == vuecomponent.EventPhotos.length) {\n                                            zip.generateAsync({ type: 'blob' }).then(function (content) {\n                                                vuecomponent.bar.animate(1);\n                                                saveAs(content, zipFilename);\n                                                vuecomponent.bar.animate(0);\n                                            });\n                                        }\n                                    });\n\n                                })\n\n                        }\n                        else {\n                            FullSizePhotoArray[e] = null;\n                            count++\n                        }\n                    })\n            }\n\n\n        },\n\n        onFileChange: function (event) {\n            this.UploadPhotos.length = 0;\n            for (var i = 0; i < event.target.files.length; i++) {\n                this.$set(this.UploadPhotos, i, event.target.files[i]);\n            }\n            this.onUpload();\n        },\n        readFile: function (file) {\n            return new Promise((resolve, reject) => {\n\n                let reader = new FileReader();\n\n                reader.onload = () => {\n                    resolve(reader.result.replace(/data:image\\/png;base64,|data:image\\/jpeg;base64,|data:image\\/gif;base64,/gi, ''));\n                };\n\n                reader.onerror = reject;\n\n                reader.readAsDataURL(file);\n\n            })\n        },\n\n        onUpload: async function () {\n            var url = 'https://photobookwebapi1.azurewebsites.net/api/Picture'\n\n            var vuecomponent = this;\n\n            for (let i = 0; i < this.UploadPhotos.length; i++) {\n\n                vuecomponent.bar.animate(((i + 1) / this.UploadPhotos.length));\n\n\n                let base64Img = await this.readFile(this.UploadPhotos[i])\n\n                let dataToBeSend = {\n                    pictureString: base64Img,\n                    eventPin: vuecomponent.EventPin\n                };\n\n                await fetch(url, {\n                    method: 'POST',\n                    credentials: 'include',\n                    headers: new Headers({\n                        'Content-Type': 'application/json', 'Accept': 'application/json'\n                    }),\n                    mode: 'cors',\n                    body: JSON.stringify(dataToBeSend)\n                })\n                    .then(function (response) {\n                        if (i == vuecomponent.UploadPhotos.length - 1) {\n                            vuecomponent.bar.animate(0.0);\n                            vuecomponent.getEventPhotos();\n\n                        }\n                        if (response.status != '200') {\n                            alert(\"Images failed to upload\")\n                        }\n\n                    })\n\n\n            }\n\n            while (this.UploadPhotos.length != 0) {\n                this.UploadPhotos.pop();\n            }\n\n\n\n        },\n        getEventPhotos: function () {\n            var picturelisturl = 'https://photobookwebapi1.azurewebsites.net/api/Picture/Ids/' + this.EventPin;\n            var vuecomponent = this;\n\n            fetch(picturelisturl, {\n                credentials: 'include',\n                headers: new Headers({\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json',\n                    'Accept-Encoding': 'gzip, deflate, br',\n                    'Accept-Language': 'da, en-US; q=0.9, en; q=0.8, de; q=0.7, nb; q=0.6'\n\n                }),\n                mode: 'cors'\n            })\n                .then(function (response) {\n                    if (response.status == '200') {\n                        response.json()\n                            .then(data => ({ body: data }))\n                            .then(function (data) {\n                                for (let i = 0; i < data.body.pictureList.length; i++) {\n                                    vuecomponent.$set(vuecomponent.EventPhotoIDs, i, data.body.pictureList[i]);\n                                    \n                                }\n\n                            })\n                            .then(function () {\n                                vuecomponent.$cookie.set('currenteventphotoids', JSON.stringify(vuecomponent.EventPhotoIDs))\n                                vuecomponent.updatepage();\n                            })\n                    }\n                })\n        },\n\n        updatepage: async function () {\n            var vuecomponent = this;\n\n            for (let e = 0; e < vuecomponent.EventPhotoIDs.length; e++) {\n                \n                let specificpictureurl = 'https://photobookwebapi1.azurewebsites.net/api/Picture/Preview/' + vuecomponent.EventPin + '/' + vuecomponent.EventPhotoIDs[e];\n                \n                await fetch(specificpictureurl, {\n                    credentials: 'include',\n                    mode: 'cors'\n                })\n                    .then(function (response) {\n                        if (response.status == '200') {\n                            response.blob()\n                                .then(image => {\n                                    \n                                    vuecomponent.$set(vuecomponent.EventPhotos, e, URL.createObjectURL(image));\n                                    \n                                })\n                        }\n                        else {\n                            vuecomponent.$set(vuecomponent.EventPhotos, e, null);\n                        }\n\n                    })\n            }\n            \n        },\n        getEventInfo: function () {\n            var vuecomponent = this;\n\n            var url = 'https://photobookwebapi1.azurewebsites.net/api/Event/' + vuecomponent.EventPin;\n\n            fetch(url, {\n                credentials: 'include',\n                mode: 'cors'\n            })\n                .then(function (response) {\n                    if (response.status == '200') {\n                        response.json()\n                            .then(data => ({ body: data }))\n                            .then(function (data) {\n                                vuecomponent.EventName = data.body.name;\n                                vuecomponent.EventDescription = data.body.description;\n                                vuecomponent.EventLocation = data.body.location;\n                                {\n                                    let DateObject = new Date(Date.parse(data.body.startDate));\n                                    let FullDateString = DateObject.toString();\n                                    var dateArray = FullDateString.split('');\n                                    dateArray.splice(FullDateString.indexOf('GMT') - 4);\n                                    var shorterDate = dateArray.join('');\n                                    vuecomponent.EventStarttime = shorterDate;\n                                }\n                                {\n                                    let DateObject = new Date(Date.parse(data.body.endDate));\n                                    let FullDateString = DateObject.toString();\n                                    var dateArray = FullDateString.split('');\n                                    dateArray.splice(FullDateString.indexOf('GMT') - 4);\n                                    var shorterDate = dateArray.join('');\n                                    vuecomponent.EventEndtime = shorterDate;\n                                }\n\n                            })\n                            \n                    }\n                })\n\n\n        },\n        logout: function () {\n            var url = 'https://photobookwebapi1.azurewebsites.net/api/Account/Logout';\n            \n            var router = this.$router;\n            var cookie = this.$cookie;\n\n            fetch(url, {\n                method: 'POST',\n                credentials: 'include',\n                headers: new Headers({\n                    'Content-Type': 'application/json', 'Accept': 'application/json'\n                }),\n                mode: 'cors'\n            }).then(function (response) {\n                if (response.status == '200' || response.status == '204') {\n                    cookie.delete('LoggedInGuest')\n                    cookie.delete('currenteventpin')\n                    cookie.delete('currenteventname')\n                    cookie.delete('currentguest')\n                    router.push({ name: 'Home' })\n\n                }\n                else {\n                    alert(\"Failed to log out\")\n                }\n            })\n        },\n\n\n\n    },\n    data() {\n        return {\n            zippedPhotos: null,\n            EventPhotoIDs: [/*...*/],\n            EventPhotos: [/*...*/],\n            UploadPhotos: [/*...*/],\n            EventPin: null,\n            EventName: null,\n            EventDescription: null,\n            EventLocation: null,\n            EventStarttime: null,\n            EventEndtime: null,\n            bar: null,\n        }\n    },\n    beforeMount() {\n        if (this.$cookie.get('LoggedInGuest') != 'True') {\n            this.$router.push({ name: 'Home' })\n            return;\n        }\n        \n        if (this.$cookie.get('currenteventpin') == null) {\n            this.$cookie.set('currenteventpin', this.$route.params.EventPin)\n\n        }\n        else if (this.$route.params.EventPin != null && this.$cookie.get('currenteventpin') != this.$route.params.EventPin) {\n            this.$cookie.set('currenteventpin', this.$route.params.EventPin);\n        }\n\n        if (this.$cookie.get('currentguest') == null) {\n            this.$cookie.set('currentguest', this.$route.params.GuestName)\n\n        }\n        else if (this.$route.params.GuestName != null && this.$cookie.get('currentguest') != this.$route.params.GuestName) {\n            this.$cookie.set('currentguest', this.$route.params.GuestName);\n        }\n        \n        this.EventPin = this.$cookie.get('currenteventpin');\n        this.GuestName = this.$cookie.get('currentguest');\n        this.getEventInfo();\n       \n        this.getEventPhotos();\n    },\n    mounted() {\n        var ProgressBar = require('progressbar.js')\n        this.bar = new ProgressBar.Circle(container, {\n            strokeWidth: 10,\n            easing: 'easeInOut',\n            duration: 500,\n            color: '#f4766f',\n            trailWidth: 0,\n            svgStyle: null\n        });\n    },\n\n\n\n}\n\n\n",{"version":3,"sources":["GuestEventPage.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoCA;AACA;;;AAGA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;;AAGA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;AAGA;;AAEA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA","file":"GuestEventPage.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div id=\"WrapperInternalPage\" class=\"Wrapper\">\r\n        <div class=\"WrapperTopNav\">\r\n            <a> Hello {{GuestName}} welcome to {{EventName}}</a> <br />\r\n            <div class=\"aligncenter\">\r\n                <label class=\"inputlabel\" for=\"file\">\r\n                    <span v-if=\"UploadPhotos.length > 0\">{{UploadPhotos.length}} images selected</span>\r\n                    <span v-else>Upload</span>\r\n                </label>\r\n                <input name=\"file\" id=\"file\" class=\"inputfile\" accept=\"image/*\" type=\"file\" @change=\"onFileChange\" multiple>\r\n                <button class=\"smallbutton\" @click=\"downloadPhotos\">Download All</button>\r\n                <button class=\"smallbutton\" @click=\"logout\"> Logout </button>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"ContentBox\">\r\n            <a> Event Pin: {{EventPin}} </a> <br />\r\n            <a> Location: {{EventLocation}} </a><br />\r\n            <a> Description: {{EventDescription}}</a><br />\r\n            <a> Starting: <time datetime=\"DD-MM-YY:hh:mmTZD\">{{EventStarttime}}</time> - Ending: {{EventEndtime}} </a><br />\r\n\r\n            <div v-if=\"EventPhoto != null\" v-for=\"(EventPhoto,index) in EventPhotos\" v-bind:key=\"EventPhoto\" class=\"imgdiv\">\r\n                <router-link :to=\"{name: 'GuestBigPhotoPage', params: {PictureIDindex: index}}\">\r\n                    <img class=\"previewImg\" :src=\"EventPhoto\" /><br />\r\n                </router-link>\r\n            </div>\r\n        </div>\r\n\r\n        <div id=\"container\"></div>\r\n\r\n    </div>\n\n</template>\n\n<script>\n\n    import JSZip from 'jszip'\n    import { saveAs } from 'file-saver';\n\n\n    export default {\n\n        methods: {\n            downloadPhotos: function () {\n\n                var zip = new JSZip();\n                var count = 0;\n                var zipFilename = \"Photos.zip\";\n                var vuecomponent = this;\n                let FullSizePhotoArray = [/*...*/]\n               \n\n                for (let e = 0; e < vuecomponent.EventPhotoIDs.length; e++) {\n\n                    let specificpictureurl = 'https://photobookwebapi1.azurewebsites.net/api/Picture/' + vuecomponent.EventPin + '/' + vuecomponent.EventPhotoIDs[e];\n\n                    fetch(specificpictureurl, {\n                        credentials: 'include',\n                        mode: 'cors'\n                    })\n                        .then(function (response) {\n                            if (response.status == '200') {\n                                response.blob()\n                                    .then(image => {\n                                        // Then create a local URL for that image and print it \n                                        FullSizePhotoArray[e] = URL.createObjectURL(image);\n\n                                        var filename = FullSizePhotoArray[e];\n                                        \n                                        filename = filename.replace(/[\\/\\*\\|\\:\\<\\>\\?\\\"\\\\]/gi, '').replace(\"blobhttplocalhost1337\", \"\").replace(\"blobhttpsphotobookvue.z16.web.core.windows.net\", \"\");;\n                                        // loading a file and add it in a zip file\n                                        JSZipUtils.getBinaryContent(FullSizePhotoArray[e], function (err, data) {\n                                            if (err) {\n                                                throw err; // or handle the error\n                                            }\n                                            zip.file(filename + '.jpg', data, { binary: true });\n                                            count++;\n                                            vuecomponent.bar.animate((count / vuecomponent.EventPhotos.length) * 0.95);\n                                            if (count == vuecomponent.EventPhotos.length) {\n                                                zip.generateAsync({ type: 'blob' }).then(function (content) {\n                                                    vuecomponent.bar.animate(1);\n                                                    saveAs(content, zipFilename);\n                                                    vuecomponent.bar.animate(0);\n                                                });\n                                            }\n                                        });\n\n                                    })\n\n                            }\n                            else {\n                                FullSizePhotoArray[e] = null;\n                                count++\n                            }\n                        })\n                }\n\n\n            },\n\n            onFileChange: function (event) {\n                this.UploadPhotos.length = 0;\n                for (var i = 0; i < event.target.files.length; i++) {\n                    this.$set(this.UploadPhotos, i, event.target.files[i]);\n                }\n                this.onUpload();\n            },\n            readFile: function (file) {\r\n                return new Promise((resolve, reject) => {\r\n\r\n                    let reader = new FileReader();\r\n\r\n                    reader.onload = () => {\r\n                        resolve(reader.result.replace(/data:image\\/png;base64,|data:image\\/jpeg;base64,|data:image\\/gif;base64,/gi, ''));\r\n                    };\r\n\r\n                    reader.onerror = reject;\r\n\r\n                    reader.readAsDataURL(file);\r\n\r\n                })\r\n            },\r\n\r\n            onUpload: async function () {\r\n                var url = 'https://photobookwebapi1.azurewebsites.net/api/Picture'\r\n\r\n                var vuecomponent = this;\r\n\r\n                for (let i = 0; i < this.UploadPhotos.length; i++) {\r\n\r\n                    vuecomponent.bar.animate(((i + 1) / this.UploadPhotos.length));\r\n\r\n\r\n                    let base64Img = await this.readFile(this.UploadPhotos[i])\r\n\r\n                    let dataToBeSend = {\r\n                        pictureString: base64Img,\r\n                        eventPin: vuecomponent.EventPin\r\n                    };\r\n\r\n                    await fetch(url, {\r\n                        method: 'POST',\r\n                        credentials: 'include',\r\n                        headers: new Headers({\r\n                            'Content-Type': 'application/json', 'Accept': 'application/json'\r\n                        }),\r\n                        mode: 'cors',\r\n                        body: JSON.stringify(dataToBeSend)\r\n                    })\r\n                        .then(function (response) {\r\n                            if (i == vuecomponent.UploadPhotos.length - 1) {\r\n                                vuecomponent.bar.animate(0.0);\r\n                                vuecomponent.getEventPhotos();\r\n\r\n                            }\r\n                            if (response.status != '200') {\r\n                                alert(\"Images failed to upload\")\r\n                            }\r\n\r\n                        })\r\n\r\n\r\n                }\r\n\r\n                while (this.UploadPhotos.length != 0) {\r\n                    this.UploadPhotos.pop();\r\n                }\r\n\r\n\r\n\r\n            },\n            getEventPhotos: function () {\n                var picturelisturl = 'https://photobookwebapi1.azurewebsites.net/api/Picture/Ids/' + this.EventPin;\n                var vuecomponent = this;\n\n                fetch(picturelisturl, {\n                    credentials: 'include',\n                    headers: new Headers({\n                        'Content-Type': 'application/json',\n                        'Accept': 'application/json',\n                        'Accept-Encoding': 'gzip, deflate, br',\n                        'Accept-Language': 'da, en-US; q=0.9, en; q=0.8, de; q=0.7, nb; q=0.6'\n\n                    }),\n                    mode: 'cors'\n                })\n                    .then(function (response) {\n                        if (response.status == '200') {\n                            response.json()\n                                .then(data => ({ body: data }))\n                                .then(function (data) {\n                                    for (let i = 0; i < data.body.pictureList.length; i++) {\n                                        vuecomponent.$set(vuecomponent.EventPhotoIDs, i, data.body.pictureList[i]);\n                                        \n                                    }\n\n                                })\n                                .then(function () {\n                                    vuecomponent.$cookie.set('currenteventphotoids', JSON.stringify(vuecomponent.EventPhotoIDs))\n                                    vuecomponent.updatepage();\n                                })\n                        }\n                    })\n            },\n\n            updatepage: async function () {\n                var vuecomponent = this;\n\n                for (let e = 0; e < vuecomponent.EventPhotoIDs.length; e++) {\n                    \n                    let specificpictureurl = 'https://photobookwebapi1.azurewebsites.net/api/Picture/Preview/' + vuecomponent.EventPin + '/' + vuecomponent.EventPhotoIDs[e];\n                    \n                    await fetch(specificpictureurl, {\n                        credentials: 'include',\n                        mode: 'cors'\n                    })\n                        .then(function (response) {\n                            if (response.status == '200') {\n                                response.blob()\n                                    .then(image => {\n                                        \n                                        vuecomponent.$set(vuecomponent.EventPhotos, e, URL.createObjectURL(image));\n                                        \n                                    })\n                            }\n                            else {\n                                vuecomponent.$set(vuecomponent.EventPhotos, e, null);\n                            }\n\n                        })\n                }\n                \n            },\n            getEventInfo: function () {\n                var vuecomponent = this;\n\n                var url = 'https://photobookwebapi1.azurewebsites.net/api/Event/' + vuecomponent.EventPin;\r\n\r\n                fetch(url, {\n                    credentials: 'include',\n                    mode: 'cors'\n                })\n                    .then(function (response) {\n                        if (response.status == '200') {\n                            response.json()\n                                .then(data => ({ body: data }))\n                                .then(function (data) {\n                                    vuecomponent.EventName = data.body.name;\n                                    vuecomponent.EventDescription = data.body.description;\n                                    vuecomponent.EventLocation = data.body.location;\n                                    {\n                                        let DateObject = new Date(Date.parse(data.body.startDate));\n                                        let FullDateString = DateObject.toString();\n                                        var dateArray = FullDateString.split('');\r\n                                        dateArray.splice(FullDateString.indexOf('GMT') - 4);\r\n                                        var shorterDate = dateArray.join('');\n                                        vuecomponent.EventStarttime = shorterDate;\n                                    }\n                                    {\n                                        let DateObject = new Date(Date.parse(data.body.endDate));\n                                        let FullDateString = DateObject.toString();\n                                        var dateArray = FullDateString.split('');\r\n                                        dateArray.splice(FullDateString.indexOf('GMT') - 4);\r\n                                        var shorterDate = dateArray.join('');\n                                        vuecomponent.EventEndtime = shorterDate;\n                                    }\n\n                                })\n                                \n                        }\n                    })\r\n\r\n\r\n            },\n            logout: function () {\n                var url = 'https://photobookwebapi1.azurewebsites.net/api/Account/Logout';\r\n                \r\n                var router = this.$router;\r\n                var cookie = this.$cookie;\r\n\r\n                fetch(url, {\r\n                    method: 'POST',\r\n                    credentials: 'include',\r\n                    headers: new Headers({\r\n                        'Content-Type': 'application/json', 'Accept': 'application/json'\r\n                    }),\r\n                    mode: 'cors'\r\n                }).then(function (response) {\r\n                    if (response.status == '200' || response.status == '204') {\r\n                        cookie.delete('LoggedInGuest')\r\n                        cookie.delete('currenteventpin')\r\n                        cookie.delete('currenteventname')\r\n                        cookie.delete('currentguest')\r\n                        router.push({ name: 'Home' })\r\n\r\n                    }\r\n                    else {\r\n                        alert(\"Failed to log out\")\r\n                    }\r\n                })\r\n            },\n\n\n\n        },\n        data() {\n            return {\n                zippedPhotos: null,\n                EventPhotoIDs: [/*...*/],\n                EventPhotos: [/*...*/],\n                UploadPhotos: [/*...*/],\n                EventPin: null,\n                EventName: null,\r\n                EventDescription: null,\r\n                EventLocation: null,\r\n                EventStarttime: null,\r\n                EventEndtime: null,\n                bar: null,\n            }\n        },\n        beforeMount() {\n            if (this.$cookie.get('LoggedInGuest') != 'True') {\n                this.$router.push({ name: 'Home' })\r\n                return;\r\n            }\n            \n            if (this.$cookie.get('currenteventpin') == null) {\n                this.$cookie.set('currenteventpin', this.$route.params.EventPin)\n\n            }\n            else if (this.$route.params.EventPin != null && this.$cookie.get('currenteventpin') != this.$route.params.EventPin) {\n                this.$cookie.set('currenteventpin', this.$route.params.EventPin);\n            }\n\n            if (this.$cookie.get('currentguest') == null) {\n                this.$cookie.set('currentguest', this.$route.params.GuestName)\n\n            }\n            else if (this.$route.params.GuestName != null && this.$cookie.get('currentguest') != this.$route.params.GuestName) {\n                this.$cookie.set('currentguest', this.$route.params.GuestName);\n            }\n            \n            this.EventPin = this.$cookie.get('currenteventpin');\n            this.GuestName = this.$cookie.get('currentguest');\n            this.getEventInfo();\n           \n            this.getEventPhotos();\n        },\n        mounted() {\r\n            var ProgressBar = require('progressbar.js')\r\n            this.bar = new ProgressBar.Circle(container, {\r\n                strokeWidth: 10,\r\n                easing: 'easeInOut',\r\n                duration: 500,\r\n                color: '#f4766f',\r\n                trailWidth: 0,\r\n                svgStyle: null\r\n            });\r\n        },\n\n\n\n    }\n\n\n</script>\n\n<style scoped>\n</style>"]}]}