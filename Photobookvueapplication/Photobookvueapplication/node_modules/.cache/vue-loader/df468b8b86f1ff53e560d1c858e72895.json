{"remainingRequest":"C:\\PhotoBookVueApplication\\Photobookvueapplication\\Photobookvueapplication\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\PhotoBookVueApplication\\Photobookvueapplication\\Photobookvueapplication\\src\\components\\HostEventPage.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\PhotoBookVueApplication\\Photobookvueapplication\\Photobookvueapplication\\src\\components\\HostEventPage.vue","mtime":1557154459332},{"path":"C:\\PhotoBookVueApplication\\Photobookvueapplication\\Photobookvueapplication\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\PhotoBookVueApplication\\Photobookvueapplication\\Photobookvueapplication\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\PhotoBookVueApplication\\Photobookvueapplication\\Photobookvueapplication\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\PhotoBookVueApplication\\Photobookvueapplication\\Photobookvueapplication\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n\n    methods: {\n        getEventPhotos: function () {\n            var picturelisturl = 'https://photobookwebapi1.azurewebsites.net/api/Picture/Ids/' + this.EventPin;\n            var vuecomponent = this;\n\n            fetch(picturelisturl, {\n                credentials: 'include',\n                headers: new Headers({\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json',\n                    'Accept-Encoding': 'gzip, deflate, br',\n                    'Accept-Language': 'da, en-US; q=0.9, en; q=0.8, de; q=0.7, nb; q=0.6'\n\n                }),\n                mode: 'cors'\n            })\n                .then(function (response) {\n                    if (response.status == '200') {\n                        response.json()\n                            .then(data => ({ body: data }))\n                            .then(function (data) {\n                                vuecomponent.EventPhotoIDs = data.body;\n                            })\n                    }\n                });\n            /*\n            for (let EventPhotoID of EventPhotoIDs) {\n                var localphotourl;\n                var specificpictureurl = '/api/Picture/Preview/{EventPin}/{PictureId}' + this.EventPin + EventPhotoID; \n\n\n                fetch(specificpictureurl, {\n                    credentials: 'include',\n                    headers: new Headers({\n                        'Content-Type': 'application/json',\n                        'Accept': 'application/json',\n                        'Accept-Encoding': 'gzip, deflate, br',\n                        'Accept-Language': 'da, en-US; q=0.9, en; q=0.8, de; q=0.7, nb; q=0.6'\n\n                    }),\n                    mode: 'cors'\n                })*/\n\n            \n            /*\n            .then(response => response.blob())\n                .then(images => {\n                    // Then create a local URL for that image and print it \n                    outside = URL.createObjectURL(images)\n                    console.log(outside)\n                })*/\n        }\n    },\n    data() {\n        return {\n            EventPhotoIDs: [/*...*/],\n            EventPhotos: [/*...*/],\n            \n            EventPin: this.$route.params.Pin,\n            EventHostName: this.$route.params.HostName,\n            HostEmail: this.$route.params.Email,\n            thisEventName: this.$route.params.EventName\n            \n        }\n    },\n    beforeMount() {\n        this.getEventPhotos();\n    }\n}\n\n\n\n",{"version":3,"sources":["HostEventPage.vue"],"names":[],"mappings":";;;;;;;;;AASA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"HostEventPage.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n    <div id=\"WrapperInternalPage\" class=\"Wrapper\">\r\n        <a>Welcome {{EventHostName}} to your event:</a> <br />\r\n        <a>{{thisEventName}}</a>\r\n\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n\r\n        methods: {\r\n            getEventPhotos: function () {\r\n                var picturelisturl = 'https://photobookwebapi1.azurewebsites.net/api/Picture/Ids/' + this.EventPin;\r\n                var vuecomponent = this;\r\n\r\n                fetch(picturelisturl, {\r\n                    credentials: 'include',\r\n                    headers: new Headers({\r\n                        'Content-Type': 'application/json',\r\n                        'Accept': 'application/json',\r\n                        'Accept-Encoding': 'gzip, deflate, br',\r\n                        'Accept-Language': 'da, en-US; q=0.9, en; q=0.8, de; q=0.7, nb; q=0.6'\r\n\r\n                    }),\r\n                    mode: 'cors'\r\n                })\r\n                    .then(function (response) {\r\n                        if (response.status == '200') {\r\n                            response.json()\r\n                                .then(data => ({ body: data }))\r\n                                .then(function (data) {\r\n                                    vuecomponent.EventPhotoIDs = data.body;\r\n                                })\r\n                        }\r\n                    });\r\n                /*\r\n                for (let EventPhotoID of EventPhotoIDs) {\r\n                    var localphotourl;\r\n                    var specificpictureurl = '/api/Picture/Preview/{EventPin}/{PictureId}' + this.EventPin + EventPhotoID; \r\n\r\n\r\n                    fetch(specificpictureurl, {\r\n                        credentials: 'include',\r\n                        headers: new Headers({\r\n                            'Content-Type': 'application/json',\r\n                            'Accept': 'application/json',\r\n                            'Accept-Encoding': 'gzip, deflate, br',\r\n                            'Accept-Language': 'da, en-US; q=0.9, en; q=0.8, de; q=0.7, nb; q=0.6'\r\n\r\n                        }),\r\n                        mode: 'cors'\r\n                    })*/\r\n\r\n                \r\n                /*\r\n                .then(response => response.blob())\r\n                    .then(images => {\r\n                        // Then create a local URL for that image and print it \r\n                        outside = URL.createObjectURL(images)\r\n                        console.log(outside)\r\n                    })*/\r\n            }\r\n        },\r\n        data() {\r\n            return {\r\n                EventPhotoIDs: [/*...*/],\r\n                EventPhotos: [/*...*/],\r\n                \r\n                EventPin: this.$route.params.Pin,\r\n                EventHostName: this.$route.params.HostName,\r\n                HostEmail: this.$route.params.Email,\r\n                thisEventName: this.$route.params.EventName\r\n                \r\n            }\r\n        },\r\n        beforeMount() {\r\n            this.getEventPhotos();\r\n        }\r\n    }\r\n\r\n\r\n\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"]}]}