{"remainingRequest":"C:\\PhotoBookVueApplication\\Photobookvueapplication\\Photobookvueapplication\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\PhotoBookVueApplication\\Photobookvueapplication\\Photobookvueapplication\\src\\components\\HostEventPage.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\PhotoBookVueApplication\\Photobookvueapplication\\Photobookvueapplication\\src\\components\\HostEventPage.vue","mtime":1557317532480},{"path":"C:\\PhotoBookVueApplication\\Photobookvueapplication\\Photobookvueapplication\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\PhotoBookVueApplication\\Photobookvueapplication\\Photobookvueapplication\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\PhotoBookVueApplication\\Photobookvueapplication\\Photobookvueapplication\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\PhotoBookVueApplication\\Photobookvueapplication\\Photobookvueapplication\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n\n    methods: {\n        onFileChange: function (event) {\n            this.UploadPhotos.length = 0;\n            for (var i = 0; i < event.target.files.length; i++) {\n                this.$set(this.UploadPhotos, i, event.target.files[i]);\n            }\n        },\n        onUpload: function () {\n            var url = 'https://photobookwebapi1.azurewebsites.net/api/Picture'\n\n            var vuecomponent = this;\n\n            for (let i = 0; i < this.UploadPhotos.length; i++) {\n                let reader = new FileReader();\n                reader.readAsDataURL(this.UploadPhotos[i]);\n                reader.onload = function () {\n                    let base64Img = reader.result.replace(\"data:image/jpeg;base64,\", \"\");\n\n                    let dataToBeSend = {\n                        pictureString: base64Img,\n                        eventPin: vuecomponent.EventPin\n                    };\n\n                    fetch(url, {\n                        method: 'POST',\n                        credentials: 'include',\n                        headers: new Headers({\n                            'Content-Type': 'application/json', 'Accept': 'application/json'\n                        }),\n                        mode: 'cors',\n                        body: JSON.stringify(dataToBeSend)\n                    })\n                        .then(function (response) {\n                            if (response.status != '200') {\n                                alert(\"Images failed to upload\")\n                            }\n                        })\n\n\n                }\n\n            }\n\n\n            for (let e = 0; e < this.UploadPhotos.length + 1; e++) {\n                this.UploadPhotos.pop();\n            }\n\n        },\n        getEventPhotos: function () {\n            var picturelisturl = 'https://photobookwebapi1.azurewebsites.net/api/Picture/Ids/' + this.EventPin;\n            var vuecomponent = this;\n\n            fetch(picturelisturl, {\n                credentials: 'include',\n                headers: new Headers({\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json',\n                    'Accept-Encoding': 'gzip, deflate, br',\n                    'Accept-Language': 'da, en-US; q=0.9, en; q=0.8, de; q=0.7, nb; q=0.6'\n\n                }),\n                mode: 'cors'\n            })\n                .then(function (response) {\n                    if (response.status == '200') {\n                        response.json()\n                            .then(data => ({ body: data }))\n                            .then(function (data) {\n                                vuecomponent.EventPhotoIDs = data.body.pictureList;\n                            })\n                    }\n                });\n\n\n            for (let EventPhotoID of EventPhotoIDs) {\n                let localphotourl;\n                let specificpictureurl = '/api/Picture/Preview/{EventPin}/{PictureId}' + this.EventPin + EventPhotoID;\n\n            \n                fetch(specificpictureurl, {\n                    credentials: 'include',\n                    headers: new Headers({\n                        'Content-Type': 'application/json',\n                        'Accept': 'application/json',\n                        'Accept-Encoding': 'gzip, deflate, br',\n                        'Accept-Language': 'da, en-US; q=0.9, en; q=0.8, de; q=0.7, nb; q=0.6'\n\n                    }),\n                    mode: 'cors'\n                })\n                 .then(response => response.blob())\n                    .then(images => {\n                        // Then create a local URL for that image and print it \n                        localphotourl = URL.createObjectURL(images)\n                        console.log(outside)\n                    })\n            }\n        }\n    \n    },\n    data() {\n        return {\n            EventPhotoIDs: [/*...*/],\n            EventPhotos: [/*...*/],\n            UploadPhotos: [/*...*/],\n            EventPin: this.$route.params.Pin,\n            EventHostName: this.$route.params.HostName,\n            HostEmail: this.$route.params.Email,\n            thisEventName: this.$route.params.EventName\n            \n        }\n    },\n    beforeMount() {\n        this.getEventPhotos();\n    }\n}\n\n\n\n",{"version":3,"sources":["HostEventPage.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAkBA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"HostEventPage.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n    <div id=\"WrapperInternalPage\" class=\"Wrapper\">\r\n        <div>\r\n            <a class=\"alignleft\">{{thisEventName}} hosted by {{EventHostName}}</a>\r\n            <button class=\"smallbuttonright\" @click=\"onUpload\">Upload</button>\r\n            \r\n            <label class=\"inputlabel\" for=\"file\">\r\n                <span v-if=\"UploadPhotos.length > 0\">{{UploadPhotos.length}} images selected</span>\r\n                <span v-else>Select images</span>\r\n            </label>\r\n            <input name=\"file\" id=\"file\" class=\"inputfile\" accept=\"image/*\" type=\"file\" @change=\"onFileChange\" multiple><br>\r\n\r\n        </div>\r\n\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n\r\n        methods: {\r\n            onFileChange: function (event) {\r\n                this.UploadPhotos.length = 0;\r\n                for (var i = 0; i < event.target.files.length; i++) {\r\n                    this.$set(this.UploadPhotos, i, event.target.files[i]);\r\n                }\r\n            },\r\n            onUpload: function () {\r\n                var url = 'https://photobookwebapi1.azurewebsites.net/api/Picture'\r\n\r\n                var vuecomponent = this;\r\n\r\n                for (let i = 0; i < this.UploadPhotos.length; i++) {\r\n                    let reader = new FileReader();\r\n                    reader.readAsDataURL(this.UploadPhotos[i]);\r\n                    reader.onload = function () {\r\n                        let base64Img = reader.result.replace(\"data:image/jpeg;base64,\", \"\");\r\n\r\n                        let dataToBeSend = {\r\n                            pictureString: base64Img,\r\n                            eventPin: vuecomponent.EventPin\r\n                        };\r\n\r\n                        fetch(url, {\r\n                            method: 'POST',\r\n                            credentials: 'include',\r\n                            headers: new Headers({\r\n                                'Content-Type': 'application/json', 'Accept': 'application/json'\r\n                            }),\r\n                            mode: 'cors',\r\n                            body: JSON.stringify(dataToBeSend)\r\n                        })\r\n                            .then(function (response) {\r\n                                if (response.status != '200') {\r\n                                    alert(\"Images failed to upload\")\r\n                                }\r\n                            })\r\n\r\n\r\n                    }\r\n\r\n                }\r\n\r\n\r\n                for (let e = 0; e < this.UploadPhotos.length + 1; e++) {\r\n                    this.UploadPhotos.pop();\r\n                }\r\n\r\n            },\r\n            getEventPhotos: function () {\r\n                var picturelisturl = 'https://photobookwebapi1.azurewebsites.net/api/Picture/Ids/' + this.EventPin;\r\n                var vuecomponent = this;\r\n\r\n                fetch(picturelisturl, {\r\n                    credentials: 'include',\r\n                    headers: new Headers({\r\n                        'Content-Type': 'application/json',\r\n                        'Accept': 'application/json',\r\n                        'Accept-Encoding': 'gzip, deflate, br',\r\n                        'Accept-Language': 'da, en-US; q=0.9, en; q=0.8, de; q=0.7, nb; q=0.6'\r\n\r\n                    }),\r\n                    mode: 'cors'\r\n                })\r\n                    .then(function (response) {\r\n                        if (response.status == '200') {\r\n                            response.json()\r\n                                .then(data => ({ body: data }))\r\n                                .then(function (data) {\r\n                                    vuecomponent.EventPhotoIDs = data.body.pictureList;\r\n                                })\r\n                        }\r\n                    });\r\n\r\n\r\n                for (let EventPhotoID of EventPhotoIDs) {\r\n                    let localphotourl;\r\n                    let specificpictureurl = '/api/Picture/Preview/{EventPin}/{PictureId}' + this.EventPin + EventPhotoID;\r\n\r\n                \r\n                    fetch(specificpictureurl, {\r\n                        credentials: 'include',\r\n                        headers: new Headers({\r\n                            'Content-Type': 'application/json',\r\n                            'Accept': 'application/json',\r\n                            'Accept-Encoding': 'gzip, deflate, br',\r\n                            'Accept-Language': 'da, en-US; q=0.9, en; q=0.8, de; q=0.7, nb; q=0.6'\r\n\r\n                        }),\r\n                        mode: 'cors'\r\n                    })\r\n                     .then(response => response.blob())\r\n                        .then(images => {\r\n                            // Then create a local URL for that image and print it \r\n                            localphotourl = URL.createObjectURL(images)\r\n                            console.log(outside)\r\n                        })\r\n                }\r\n            }\r\n        \r\n        },\r\n        data() {\r\n            return {\r\n                EventPhotoIDs: [/*...*/],\r\n                EventPhotos: [/*...*/],\r\n                UploadPhotos: [/*...*/],\r\n                EventPin: this.$route.params.Pin,\r\n                EventHostName: this.$route.params.HostName,\r\n                HostEmail: this.$route.params.Email,\r\n                thisEventName: this.$route.params.EventName\r\n                \r\n            }\r\n        },\r\n        beforeMount() {\r\n            this.getEventPhotos();\r\n        }\r\n    }\r\n\r\n\r\n\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"]}]}