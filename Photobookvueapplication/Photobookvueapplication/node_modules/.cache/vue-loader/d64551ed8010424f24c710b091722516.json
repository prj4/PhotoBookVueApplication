{"remainingRequest":"C:\\PhotoBookVueApplication\\Photobookvueapplication\\Photobookvueapplication\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\PhotoBookVueApplication\\Photobookvueapplication\\Photobookvueapplication\\src\\components\\AddEvent.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\PhotoBookVueApplication\\Photobookvueapplication\\Photobookvueapplication\\src\\components\\AddEvent.vue","mtime":1558559149614},{"path":"C:\\PhotoBookVueApplication\\Photobookvueapplication\\Photobookvueapplication\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\PhotoBookVueApplication\\Photobookvueapplication\\Photobookvueapplication\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\PhotoBookVueApplication\\Photobookvueapplication\\Photobookvueapplication\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\PhotoBookVueApplication\\Photobookvueapplication\\Photobookvueapplication\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n\n//v-on:click=\"postAddEvent\"\n    //method=\"post\" action=\"https://photobookwebapi1.azurewebsites.net/api/Event\"\n    methods: {\n        postAddEvent: function () {\n            var newurl = 'https://photobookwebapi1.azurewebsites.net/api/Event';\n            \n\n            var dataToBeSend = {\n                location: this.EventLocation,\n                description: this.EventDescription,\n                name: this.EventName,\n                startDate: this.StartDate,\n                endDate: this.EndDate\n            };\n\n            //var datarecieved = this.datarecievedp;\n            var router = this.$router;\n\n            fetch(newurl, {\n                method: 'POST',\n                credentials: 'include',\n                headers: new Headers({\n                    'Content-Type': 'application/json', 'Accept': 'application/json'\n                }),\n                mode: 'cors',\n                body: JSON.stringify(dataToBeSend)\n\n            }).then(function (response) {\n                if (response.status == '200') {\n                    router.push({ name: 'HostHomePage', params: { HostEmail: dataToBeSend.userName } })\n                }\n                else if (response.status == '204') {\n                    alert(\"Unable to create event, try again later\")\n                }\n                else {\n                    alert(\"Unable to create event\")\n                }\n\n            })\n\n\n        }\n    },\n    data() {\n        return {\n            EventName: null,\n            EventLocation: null,\n            EventDescription: null,\n            StartDate: null,\n            EndDate: null\n\n        }\n    },\n    beforeMount() {\n        if (this.$cookie.get('LoggedInHost') != 'True') {\n            this.$router.push({ name: 'Home' })\n            return;\n        }\n    },\n    name: 'AddEvent',\n    props: {\n\n    }\n\n\n\n};\n",{"version":3,"sources":["AddEvent.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAiBA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;AAIA","file":"AddEvent.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n    <div id=\"Wrapper\" class=\"Wrapper\">\r\n        <form >\r\n            <h1>Add Event</h1> \r\n            <input class=\"textbox\" type=\"text\" v-model=\"EventName\" placeholder=\"Event Name\" name=\"name\"/> <br /> <br />\r\n            <input class=\"textbox\" type=\"text\" v-model=\"EventLocation\" placeholder=\"Location\" name=\"location\"/> <br /> <br />\r\n            <textarea class=\"bigtextbox\" type=\"text\" v-model=\"EventDescription\" placeholder=\"Description\" name=\"description\"/> <br /> <br />\r\n            <input class=\"textbox\" type=\"datetime-local\" v-model=\"StartDate\" placeholder=\"Start Date\" name=\"startDate\"/> <br /> <br />\r\n            <input class=\"textbox\" type=\"datetime-local\" v-model=\"EndDate\" placeholder=\"End Date\" name=\"endDate\"/> <br /> <br />\r\n            <input class=\"button\" type=\"button\" v-on:click=\"postAddEvent\" value=\"Click to create event\" width=\"100px\" Height=\"50px\" /> <br />\r\n        </form>\r\n\r\n        \r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n\r\n    //v-on:click=\"postAddEvent\"\r\n        //method=\"post\" action=\"https://photobookwebapi1.azurewebsites.net/api/Event\"\r\n        methods: {\r\n            postAddEvent: function () {\r\n                var newurl = 'https://photobookwebapi1.azurewebsites.net/api/Event';\r\n                \r\n\r\n                var dataToBeSend = {\r\n                    location: this.EventLocation,\r\n                    description: this.EventDescription,\r\n                    name: this.EventName,\r\n                    startDate: this.StartDate,\r\n                    endDate: this.EndDate\r\n                };\r\n\r\n                //var datarecieved = this.datarecievedp;\r\n                var router = this.$router;\r\n\r\n                fetch(newurl, {\r\n                    method: 'POST',\r\n                    credentials: 'include',\r\n                    headers: new Headers({\r\n                        'Content-Type': 'application/json', 'Accept': 'application/json'\r\n                    }),\r\n                    mode: 'cors',\r\n                    body: JSON.stringify(dataToBeSend)\r\n\r\n                }).then(function (response) {\r\n                    if (response.status == '200') {\r\n                        router.push({ name: 'HostHomePage', params: { HostEmail: dataToBeSend.userName } })\r\n                    }\r\n                    else if (response.status == '204') {\r\n                        alert(\"Unable to create event, try again later\")\r\n                    }\r\n                    else {\r\n                        alert(\"Unable to create event\")\r\n                    }\r\n\r\n                })\r\n\r\n\r\n            }\r\n        },\r\n        data() {\r\n            return {\r\n                EventName: null,\r\n                EventLocation: null,\r\n                EventDescription: null,\r\n                StartDate: null,\r\n                EndDate: null\r\n\r\n            }\r\n        },\r\n        beforeMount() {\r\n            if (this.$cookie.get('LoggedInHost') != 'True') {\n                this.$router.push({ name: 'Home' })\r\n                return;\r\n            }\r\n        },\r\n        name: 'AddEvent',\r\n        props: {\r\n\r\n        }\r\n\r\n\r\n\r\n    };\r\n</script>\r\n\r\n<style scoped>\r\n</style>"]}]}