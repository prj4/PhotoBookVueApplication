{"remainingRequest":"C:\\PhotoBookVueApplication\\Photobookvueapplication\\Photobookvueapplication\\node_modules\\babel-loader\\lib\\index.js!C:\\PhotoBookVueApplication\\Photobookvueapplication\\Photobookvueapplication\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\PhotoBookVueApplication\\Photobookvueapplication\\Photobookvueapplication\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\PhotoBookVueApplication\\Photobookvueapplication\\Photobookvueapplication\\src\\components\\HostEventPage.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\PhotoBookVueApplication\\Photobookvueapplication\\Photobookvueapplication\\src\\components\\HostEventPage.vue","mtime":1557317532480},{"path":"C:\\PhotoBookVueApplication\\Photobookvueapplication\\Photobookvueapplication\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\PhotoBookVueApplication\\Photobookvueapplication\\Photobookvueapplication\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\PhotoBookVueApplication\\Photobookvueapplication\\Photobookvueapplication\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\PhotoBookVueApplication\\Photobookvueapplication\\Photobookvueapplication\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _getIterator from \"C:\\\\PhotoBookVueApplication\\\\Photobookvueapplication\\\\Photobookvueapplication\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/get-iterator\";\nimport _JSON$stringify from \"C:\\\\PhotoBookVueApplication\\\\Photobookvueapplication\\\\Photobookvueapplication\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/json/stringify\";\nimport \"core-js/modules/es6.regexp.replace\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  methods: {\n    onFileChange: function onFileChange(event) {\n      this.UploadPhotos.length = 0;\n\n      for (var i = 0; i < event.target.files.length; i++) {\n        this.$set(this.UploadPhotos, i, event.target.files[i]);\n      }\n    },\n    onUpload: function onUpload() {\n      var _this = this;\n\n      var url = 'https://photobookwebapi1.azurewebsites.net/api/Picture';\n      var vuecomponent = this;\n\n      var _loop = function _loop(i) {\n        var reader = new FileReader();\n        reader.readAsDataURL(_this.UploadPhotos[i]);\n\n        reader.onload = function () {\n          var base64Img = reader.result.replace(\"data:image/jpeg;base64,\", \"\");\n          var dataToBeSend = {\n            pictureString: base64Img,\n            eventPin: vuecomponent.EventPin\n          };\n          fetch(url, {\n            method: 'POST',\n            credentials: 'include',\n            headers: new Headers({\n              'Content-Type': 'application/json',\n              'Accept': 'application/json'\n            }),\n            mode: 'cors',\n            body: _JSON$stringify(dataToBeSend)\n          }).then(function (response) {\n            if (response.status != '200') {\n              alert(\"Images failed to upload\");\n            }\n          });\n        };\n      };\n\n      for (var i = 0; i < this.UploadPhotos.length; i++) {\n        _loop(i);\n      }\n\n      for (var e = 0; e < this.UploadPhotos.length + 1; e++) {\n        this.UploadPhotos.pop();\n      }\n    },\n    getEventPhotos: function getEventPhotos() {\n      var picturelisturl = 'https://photobookwebapi1.azurewebsites.net/api/Picture/Ids/' + this.EventPin;\n      var vuecomponent = this;\n      fetch(picturelisturl, {\n        credentials: 'include',\n        headers: new Headers({\n          'Content-Type': 'application/json',\n          'Accept': 'application/json',\n          'Accept-Encoding': 'gzip, deflate, br',\n          'Accept-Language': 'da, en-US; q=0.9, en; q=0.8, de; q=0.7, nb; q=0.6'\n        }),\n        mode: 'cors'\n      }).then(function (response) {\n        if (response.status == '200') {\n          response.json().then(function (data) {\n            return {\n              body: data\n            };\n          }).then(function (data) {\n            vuecomponent.EventPhotoIDs = data.body.pictureList;\n          });\n        }\n      });\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = _getIterator(EventPhotoIDs), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var EventPhotoID = _step.value;\n          var localphotourl = void 0;\n          var specificpictureurl = '/api/Picture/Preview/{EventPin}/{PictureId}' + this.EventPin + EventPhotoID;\n          fetch(specificpictureurl, {\n            credentials: 'include',\n            headers: new Headers({\n              'Content-Type': 'application/json',\n              'Accept': 'application/json',\n              'Accept-Encoding': 'gzip, deflate, br',\n              'Accept-Language': 'da, en-US; q=0.9, en; q=0.8, de; q=0.7, nb; q=0.6'\n            }),\n            mode: 'cors'\n          }).then(function (response) {\n            return response.blob();\n          }).then(function (images) {\n            // Then create a local URL for that image and print it \n            localphotourl = URL.createObjectURL(images);\n            console.log(outside);\n          });\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n    }\n  },\n  data: function data() {\n    return {\n      EventPhotoIDs: [\n        /*...*/\n      ],\n      EventPhotos: [\n        /*...*/\n      ],\n      UploadPhotos: [\n        /*...*/\n      ],\n      EventPin: this.$route.params.Pin,\n      EventHostName: this.$route.params.HostName,\n      HostEmail: this.$route.params.Email,\n      thisEventName: this.$route.params.EventName\n    };\n  },\n  beforeMount: function beforeMount() {\n    this.getEventPhotos();\n  }\n};",{"version":3,"sources":["HostEventPage.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAkBA,eAAA;AAEA,WAAA;AACA,kBAAA,sBAAA,KAAA,EAAA;AACA,WAAA,YAAA,CAAA,MAAA,GAAA,CAAA;;AACA,WAAA,IAAA,IAAA,CAAA,EAAA,IAAA,MAAA,MAAA,CAAA,KAAA,CAAA,MAAA,EAAA,GAAA,EAAA;AACA,aAAA,IAAA,CAAA,KAAA,YAAA,EAAA,CAAA,EAAA,MAAA,MAAA,CAAA,KAAA,CAAA,CAAA,CAAA;AACA;AACA,KANA;AAOA,cAAA,oBAAA;AAAA;;AACA,UAAA,MAAA,wDAAA;AAEA,UAAA,eAAA,IAAA;;AAHA,iCAKA,CALA;AAMA,YAAA,SAAA,IAAA,UAAA,EAAA;AACA,eAAA,aAAA,CAAA,MAAA,YAAA,CAAA,CAAA,CAAA;;AACA,eAAA,MAAA,GAAA,YAAA;AACA,cAAA,YAAA,OAAA,MAAA,CAAA,OAAA,CAAA,yBAAA,EAAA,EAAA,CAAA;AAEA,cAAA,eAAA;AACA,2BAAA,SADA;AAEA,sBAAA,aAAA;AAFA,WAAA;AAKA,gBAAA,GAAA,EAAA;AACA,oBAAA,MADA;AAEA,yBAAA,SAFA;AAGA,qBAAA,IAAA,OAAA,CAAA;AACA,8BAAA,kBADA;AACA,wBAAA;AADA,aAAA,CAHA;AAMA,kBAAA,MANA;AAOA,kBAAA,gBAAA,YAAA;AAPA,WAAA,EASA,IATA,CASA,UAAA,QAAA,EAAA;AACA,gBAAA,SAAA,MAAA,IAAA,KAAA,EAAA;AACA,oBAAA,yBAAA;AACA;AACA,WAbA;AAgBA,SAxBA;AARA;;AAKA,WAAA,IAAA,IAAA,CAAA,EAAA,IAAA,KAAA,YAAA,CAAA,MAAA,EAAA,GAAA,EAAA;AAAA,cAAA,CAAA;AA6BA;;AAGA,WAAA,IAAA,IAAA,CAAA,EAAA,IAAA,KAAA,YAAA,CAAA,MAAA,GAAA,CAAA,EAAA,GAAA,EAAA;AACA,aAAA,YAAA,CAAA,GAAA;AACA;AAEA,KAhDA;AAiDA,oBAAA,0BAAA;AACA,UAAA,iBAAA,gEAAA,KAAA,QAAA;AACA,UAAA,eAAA,IAAA;AAEA,YAAA,cAAA,EAAA;AACA,qBAAA,SADA;AAEA,iBAAA,IAAA,OAAA,CAAA;AACA,0BAAA,kBADA;AAEA,oBAAA,kBAFA;AAGA,6BAAA,mBAHA;AAIA,6BAAA;AAJA,SAAA,CAFA;AASA,cAAA;AATA,OAAA,EAWA,IAXA,CAWA,UAAA,QAAA,EAAA;AACA,YAAA,SAAA,MAAA,IAAA,KAAA,EAAA;AACA,mBAAA,IAAA,GACA,IADA,CACA;AAAA,mBAAA;AAAA,oBAAA;AAAA,aAAA;AAAA,WADA,EAEA,IAFA,CAEA,UAAA,IAAA,EAAA;AACA,yBAAA,aAAA,GAAA,KAAA,IAAA,CAAA,WAAA;AACA,WAJA;AAKA;AACA,OAnBA;AAJA;AAAA;AAAA;;AAAA;AA0BA,0CAAA,aAAA,4GAAA;AAAA,cAAA,YAAA;AACA,cAAA,sBAAA;AACA,cAAA,qBAAA,gDAAA,KAAA,QAAA,GAAA,YAAA;AAGA,gBAAA,kBAAA,EAAA;AACA,yBAAA,SADA;AAEA,qBAAA,IAAA,OAAA,CAAA;AACA,8BAAA,kBADA;AAEA,wBAAA,kBAFA;AAGA,iCAAA,mBAHA;AAIA,iCAAA;AAJA,aAAA,CAFA;AASA,kBAAA;AATA,WAAA,EAWA,IAXA,CAWA;AAAA,mBAAA,SAAA,IAAA,EAAA;AAAA,WAXA,EAYA,IAZA,CAYA,kBAAA;AACA;AACA,4BAAA,IAAA,eAAA,CAAA,MAAA,CAAA;AACA,oBAAA,GAAA,CAAA,OAAA;AACA,WAhBA;AAiBA;AAhDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiDA;AAlGA,GAFA;AAuGA,MAvGA,kBAuGA;AACA,WAAA;AACA,qBAAA;AAAA;AAAA,OADA;AAEA,mBAAA;AAAA;AAAA,OAFA;AAGA,oBAAA;AAAA;AAAA,OAHA;AAIA,gBAAA,KAAA,MAAA,CAAA,MAAA,CAAA,GAJA;AAKA,qBAAA,KAAA,MAAA,CAAA,MAAA,CAAA,QALA;AAMA,iBAAA,KAAA,MAAA,CAAA,MAAA,CAAA,KANA;AAOA,qBAAA,KAAA,MAAA,CAAA,MAAA,CAAA;AAPA,KAAA;AAUA,GAlHA;AAmHA,aAnHA,yBAmHA;AACA,SAAA,cAAA;AACA;AArHA,CAAA","sourcesContent":["<template>\r\n    <div id=\"WrapperInternalPage\" class=\"Wrapper\">\r\n        <div>\r\n            <a class=\"alignleft\">{{thisEventName}} hosted by {{EventHostName}}</a>\r\n            <button class=\"smallbuttonright\" @click=\"onUpload\">Upload</button>\r\n            \r\n            <label class=\"inputlabel\" for=\"file\">\r\n                <span v-if=\"UploadPhotos.length > 0\">{{UploadPhotos.length}} images selected</span>\r\n                <span v-else>Select images</span>\r\n            </label>\r\n            <input name=\"file\" id=\"file\" class=\"inputfile\" accept=\"image/*\" type=\"file\" @change=\"onFileChange\" multiple><br>\r\n\r\n        </div>\r\n\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n\r\n        methods: {\r\n            onFileChange: function (event) {\r\n                this.UploadPhotos.length = 0;\r\n                for (var i = 0; i < event.target.files.length; i++) {\r\n                    this.$set(this.UploadPhotos, i, event.target.files[i]);\r\n                }\r\n            },\r\n            onUpload: function () {\r\n                var url = 'https://photobookwebapi1.azurewebsites.net/api/Picture'\r\n\r\n                var vuecomponent = this;\r\n\r\n                for (let i = 0; i < this.UploadPhotos.length; i++) {\r\n                    let reader = new FileReader();\r\n                    reader.readAsDataURL(this.UploadPhotos[i]);\r\n                    reader.onload = function () {\r\n                        let base64Img = reader.result.replace(\"data:image/jpeg;base64,\", \"\");\r\n\r\n                        let dataToBeSend = {\r\n                            pictureString: base64Img,\r\n                            eventPin: vuecomponent.EventPin\r\n                        };\r\n\r\n                        fetch(url, {\r\n                            method: 'POST',\r\n                            credentials: 'include',\r\n                            headers: new Headers({\r\n                                'Content-Type': 'application/json', 'Accept': 'application/json'\r\n                            }),\r\n                            mode: 'cors',\r\n                            body: JSON.stringify(dataToBeSend)\r\n                        })\r\n                            .then(function (response) {\r\n                                if (response.status != '200') {\r\n                                    alert(\"Images failed to upload\")\r\n                                }\r\n                            })\r\n\r\n\r\n                    }\r\n\r\n                }\r\n\r\n\r\n                for (let e = 0; e < this.UploadPhotos.length + 1; e++) {\r\n                    this.UploadPhotos.pop();\r\n                }\r\n\r\n            },\r\n            getEventPhotos: function () {\r\n                var picturelisturl = 'https://photobookwebapi1.azurewebsites.net/api/Picture/Ids/' + this.EventPin;\r\n                var vuecomponent = this;\r\n\r\n                fetch(picturelisturl, {\r\n                    credentials: 'include',\r\n                    headers: new Headers({\r\n                        'Content-Type': 'application/json',\r\n                        'Accept': 'application/json',\r\n                        'Accept-Encoding': 'gzip, deflate, br',\r\n                        'Accept-Language': 'da, en-US; q=0.9, en; q=0.8, de; q=0.7, nb; q=0.6'\r\n\r\n                    }),\r\n                    mode: 'cors'\r\n                })\r\n                    .then(function (response) {\r\n                        if (response.status == '200') {\r\n                            response.json()\r\n                                .then(data => ({ body: data }))\r\n                                .then(function (data) {\r\n                                    vuecomponent.EventPhotoIDs = data.body.pictureList;\r\n                                })\r\n                        }\r\n                    });\r\n\r\n\r\n                for (let EventPhotoID of EventPhotoIDs) {\r\n                    let localphotourl;\r\n                    let specificpictureurl = '/api/Picture/Preview/{EventPin}/{PictureId}' + this.EventPin + EventPhotoID;\r\n\r\n                \r\n                    fetch(specificpictureurl, {\r\n                        credentials: 'include',\r\n                        headers: new Headers({\r\n                            'Content-Type': 'application/json',\r\n                            'Accept': 'application/json',\r\n                            'Accept-Encoding': 'gzip, deflate, br',\r\n                            'Accept-Language': 'da, en-US; q=0.9, en; q=0.8, de; q=0.7, nb; q=0.6'\r\n\r\n                        }),\r\n                        mode: 'cors'\r\n                    })\r\n                     .then(response => response.blob())\r\n                        .then(images => {\r\n                            // Then create a local URL for that image and print it \r\n                            localphotourl = URL.createObjectURL(images)\r\n                            console.log(outside)\r\n                        })\r\n                }\r\n            }\r\n        \r\n        },\r\n        data() {\r\n            return {\r\n                EventPhotoIDs: [/*...*/],\r\n                EventPhotos: [/*...*/],\r\n                UploadPhotos: [/*...*/],\r\n                EventPin: this.$route.params.Pin,\r\n                EventHostName: this.$route.params.HostName,\r\n                HostEmail: this.$route.params.Email,\r\n                thisEventName: this.$route.params.EventName\r\n                \r\n            }\r\n        },\r\n        beforeMount() {\r\n            this.getEventPhotos();\r\n        }\r\n    }\r\n\r\n\r\n\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"],"sourceRoot":"src/components"}]}