{"remainingRequest":"C:\\PhotoBookVueApplication\\Photobookvueapplication\\Photobookvueapplication\\node_modules\\babel-loader\\lib\\index.js!C:\\PhotoBookVueApplication\\Photobookvueapplication\\Photobookvueapplication\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\PhotoBookVueApplication\\Photobookvueapplication\\Photobookvueapplication\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\PhotoBookVueApplication\\Photobookvueapplication\\Photobookvueapplication\\src\\components\\HostEventPage.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\PhotoBookVueApplication\\Photobookvueapplication\\Photobookvueapplication\\src\\components\\HostEventPage.vue","mtime":1557154459332},{"path":"C:\\PhotoBookVueApplication\\Photobookvueapplication\\Photobookvueapplication\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\PhotoBookVueApplication\\Photobookvueapplication\\Photobookvueapplication\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\PhotoBookVueApplication\\Photobookvueapplication\\Photobookvueapplication\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\PhotoBookVueApplication\\Photobookvueapplication\\Photobookvueapplication\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  methods: {\n    getEventPhotos: function getEventPhotos() {\n      var picturelisturl = 'https://photobookwebapi1.azurewebsites.net/api/Picture/Ids/' + this.EventPin;\n      var vuecomponent = this;\n      fetch(picturelisturl, {\n        credentials: 'include',\n        headers: new Headers({\n          'Content-Type': 'application/json',\n          'Accept': 'application/json',\n          'Accept-Encoding': 'gzip, deflate, br',\n          'Accept-Language': 'da, en-US; q=0.9, en; q=0.8, de; q=0.7, nb; q=0.6'\n        }),\n        mode: 'cors'\n      }).then(function (response) {\n        if (response.status == '200') {\n          response.json().then(function (data) {\n            return {\n              body: data\n            };\n          }).then(function (data) {\n            vuecomponent.EventPhotoIDs = data.body;\n          });\n        }\n      });\n      /*\n      for (let EventPhotoID of EventPhotoIDs) {\n          var localphotourl;\n          var specificpictureurl = '/api/Picture/Preview/{EventPin}/{PictureId}' + this.EventPin + EventPhotoID; \n            fetch(specificpictureurl, {\n              credentials: 'include',\n              headers: new Headers({\n                  'Content-Type': 'application/json',\n                  'Accept': 'application/json',\n                  'Accept-Encoding': 'gzip, deflate, br',\n                  'Accept-Language': 'da, en-US; q=0.9, en; q=0.8, de; q=0.7, nb; q=0.6'\n               }),\n              mode: 'cors'\n          })*/\n\n      /*\n      .then(response => response.blob())\n          .then(images => {\n              // Then create a local URL for that image and print it \n              outside = URL.createObjectURL(images)\n              console.log(outside)\n          })*/\n    }\n  },\n  data: function data() {\n    return {\n      EventPhotoIDs: [\n        /*...*/\n      ],\n      EventPhotos: [\n        /*...*/\n      ],\n      EventPin: this.$route.params.Pin,\n      EventHostName: this.$route.params.HostName,\n      HostEmail: this.$route.params.Email,\n      thisEventName: this.$route.params.EventName\n    };\n  },\n  beforeMount: function beforeMount() {\n    this.getEventPhotos();\n  }\n};",{"version":3,"sources":["HostEventPage.vue"],"names":[],"mappings":";;;;;;;;AASA,eAAA;AAEA,WAAA;AACA,oBAAA,0BAAA;AACA,UAAA,iBAAA,gEAAA,KAAA,QAAA;AACA,UAAA,eAAA,IAAA;AAEA,YAAA,cAAA,EAAA;AACA,qBAAA,SADA;AAEA,iBAAA,IAAA,OAAA,CAAA;AACA,0BAAA,kBADA;AAEA,oBAAA,kBAFA;AAGA,6BAAA,mBAHA;AAIA,6BAAA;AAJA,SAAA,CAFA;AASA,cAAA;AATA,OAAA,EAWA,IAXA,CAWA,UAAA,QAAA,EAAA;AACA,YAAA,SAAA,MAAA,IAAA,KAAA,EAAA;AACA,mBAAA,IAAA,GACA,IADA,CACA;AAAA,mBAAA;AAAA,oBAAA;AAAA,aAAA;AAAA,WADA,EAEA,IAFA,CAEA,UAAA,IAAA,EAAA;AACA,yBAAA,aAAA,GAAA,KAAA,IAAA;AACA,WAJA;AAKA;AACA,OAnBA;AAoBA;;;;;;;;;;;;;;;AAmBA;;;;;;;AAOA;AAnDA,GAFA;AAuDA,MAvDA,kBAuDA;AACA,WAAA;AACA,qBAAA;AAAA;AAAA,OADA;AAEA,mBAAA;AAAA;AAAA,OAFA;AAIA,gBAAA,KAAA,MAAA,CAAA,MAAA,CAAA,GAJA;AAKA,qBAAA,KAAA,MAAA,CAAA,MAAA,CAAA,QALA;AAMA,iBAAA,KAAA,MAAA,CAAA,MAAA,CAAA,KANA;AAOA,qBAAA,KAAA,MAAA,CAAA,MAAA,CAAA;AAPA,KAAA;AAUA,GAlEA;AAmEA,aAnEA,yBAmEA;AACA,SAAA,cAAA;AACA;AArEA,CAAA","sourcesContent":["<template>\r\n    <div id=\"WrapperInternalPage\" class=\"Wrapper\">\r\n        <a>Welcome {{EventHostName}} to your event:</a> <br />\r\n        <a>{{thisEventName}}</a>\r\n\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n\r\n        methods: {\r\n            getEventPhotos: function () {\r\n                var picturelisturl = 'https://photobookwebapi1.azurewebsites.net/api/Picture/Ids/' + this.EventPin;\r\n                var vuecomponent = this;\r\n\r\n                fetch(picturelisturl, {\r\n                    credentials: 'include',\r\n                    headers: new Headers({\r\n                        'Content-Type': 'application/json',\r\n                        'Accept': 'application/json',\r\n                        'Accept-Encoding': 'gzip, deflate, br',\r\n                        'Accept-Language': 'da, en-US; q=0.9, en; q=0.8, de; q=0.7, nb; q=0.6'\r\n\r\n                    }),\r\n                    mode: 'cors'\r\n                })\r\n                    .then(function (response) {\r\n                        if (response.status == '200') {\r\n                            response.json()\r\n                                .then(data => ({ body: data }))\r\n                                .then(function (data) {\r\n                                    vuecomponent.EventPhotoIDs = data.body;\r\n                                })\r\n                        }\r\n                    });\r\n                /*\r\n                for (let EventPhotoID of EventPhotoIDs) {\r\n                    var localphotourl;\r\n                    var specificpictureurl = '/api/Picture/Preview/{EventPin}/{PictureId}' + this.EventPin + EventPhotoID; \r\n\r\n\r\n                    fetch(specificpictureurl, {\r\n                        credentials: 'include',\r\n                        headers: new Headers({\r\n                            'Content-Type': 'application/json',\r\n                            'Accept': 'application/json',\r\n                            'Accept-Encoding': 'gzip, deflate, br',\r\n                            'Accept-Language': 'da, en-US; q=0.9, en; q=0.8, de; q=0.7, nb; q=0.6'\r\n\r\n                        }),\r\n                        mode: 'cors'\r\n                    })*/\r\n\r\n                \r\n                /*\r\n                .then(response => response.blob())\r\n                    .then(images => {\r\n                        // Then create a local URL for that image and print it \r\n                        outside = URL.createObjectURL(images)\r\n                        console.log(outside)\r\n                    })*/\r\n            }\r\n        },\r\n        data() {\r\n            return {\r\n                EventPhotoIDs: [/*...*/],\r\n                EventPhotos: [/*...*/],\r\n                \r\n                EventPin: this.$route.params.Pin,\r\n                EventHostName: this.$route.params.HostName,\r\n                HostEmail: this.$route.params.Email,\r\n                thisEventName: this.$route.params.EventName\r\n                \r\n            }\r\n        },\r\n        beforeMount() {\r\n            this.getEventPhotos();\r\n        }\r\n    }\r\n\r\n\r\n\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"],"sourceRoot":"src/components"}]}